spring.application.name=SpringOauth

spring.security.oauth2.client.registration.google.client-id=${OAUTH_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_CLIENT_SECRET}

server.forward-headers-strategy=framework

spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASSWORD}

security.jwt.token.secret-key= ${JWT_SECRET}
security.jwt.token.expire-length= ${JWT_EXPIRY}

spring.web.cors.allowed-origin-patterns=${FRONTEND_URL}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*

server.tomcat.accesslog.enabled=true

max_oglasi_returned=${MAX_OGLASI_RETURNED}

frontend.url=${FRONTEND_URL}

logging.level.org.springframework.security=trace

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.thymeleaf.check-template-location=false